@startuml
participant TerraUI
box "Leo VM"
    participant JupyterUIExtension
    participant JupyterServerExtension
    participant Welder
end box
participant GCS

TerraUI -> GCS ++: isLocked?
alt No Lock or locked by current user
    GCS -> TerraUI:
    note left: Enable EDIT button
else LockBy someone else
    return
    note left: Disable EDIT mode button
end
TerraUI -> Welder: POST /storageLinks
note left: update storagelink for a given notebook(both SAFE mode and EDIT mode)
TerraUI -> Welder: localize
note left: localize file to corresponding location

JupyterUIExtension -> Welder ++ #F8C471: /checkMeta (syncMode)
alt 200 SyncMode.EDIT
    Welder -> JupyterUIExtension: EDIT mode
    JupyterUIExtension -> Welder: /acquireLock

    alt 200 successfully acquire Lock
        Welder -> JupyterUIExtension: No Lock or locked by current user
        loop every 30 seconds?
            JupyterUIExtension -> Welder ++ #F4D03F: /checkMeta
            alt SyncStatus.LIVE
                Welder -> JupyterUIExtension: file is live
            else SyncStatus.REMOTE_NOT_FOUND
                Welder -> JupyterUIExtension: remote file deleted or never existed
                note left: Prompt user whether they want to save the file
            else SyncStatus.DESYNCHRONIZED
                Welder -> JupyterUIExtension: file is out of sync and we don't know exactly this is due to local change or remote change
                note left: prompt user to choose 1. make a new copy 2. go to SAFE mode with current file 3. go to SAFE mode with latest remote file
            else SyncStatus.LOCAL_CHANGED
                Welder -> JupyterUIExtension: local notebook changes not saved to GCS
                note left: prompt user to choose 1. make a new copy 2. go to SAFE mode with current file 3. go to SAFE mode with latest remote file
            else SyncStatus.REMOTE_CHANGED
               return: remote copy in GCS has changed
                note left: prompt user to choose 1. make a new copy 2. go to SAFE mode with current file 3. go to SAFE mode with latest remote file
            end
        end
    else lockedBy someone else
        Welder -> JupyterUIExtension: Locked by someone else
        note left: prompt user to choose 1. make a new copy  2. go to safe mode with current file 3. go to SAFE mode with latest remote file
    end
    group autosave (jupyter built-in feature), whenever a file gets created/deleted/moved/saved via the Jupyter API
        JupyterServerExtension -> Welder: /safeDelocalize
    end
else 200 SyncMode.SAFE
    Welder -> JupyterUIExtension: SAFE mode
else 412 StorageLink not found
    return storagelink not found for this file.
end
@enduml